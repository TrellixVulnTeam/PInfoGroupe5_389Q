{"version":3,"sources":["./src/environments/environment.ts","./src/app/film-list/single-film/single-film.component.html","./src/app/film-list/single-film/single-film.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/film-list/film-list.component.html","./src/app/film-list/film-list.component.ts","./src/app/services/film.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <img class=\"images\" style=\"max-width:160px;\" *ngIf=\"film.poster\" [src]=\"film.poster\"/>\n    <h1>{{ film.title }}</h1>\n    <h3>{{ film.producer }}</h3> \n    <!-- <p>{{ film.synopsis }}</p> -->\n    <button class=\"btn btn-default\" (click)=\"onBack()\">Retour</button>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n \nimport { ActivatedRoute, Router} from '@angular/router';\n\nimport { Film }  from '../../models/film.model';\nimport { FilmService } from '../../services/film.service';\n\n@Component({\n  selector: 'app-single-film',\n  templateUrl: './single-film.component.html',\n  styleUrls: ['./single-film.component.css']\n})\nexport class SingleFilmComponent implements OnInit {\n\n  public films = [];\n  film:any;\n\n  constructor(private route: ActivatedRoute, private router: Router, private filmService: FilmService){ }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.params['id'];\n    this.filmService.getSingleFilm(id)\n    .subscribe(\n        data => this.film = data\n    )\n    //console.log(this.film.title);\n  }\n\n   onBack() {\n    this.router.navigate(['/films']);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'UI';\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n//import { AppRoutingModule } from './app-routing.module';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule } from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FilmListComponent } from './film-list/film-list.component';\n\nimport { FilmService} from './services/film.service';\nimport { SingleFilmComponent } from './film-list/single-film/single-film.component';\n\nconst appRoutes: Routes = [\n\t{path: 'films', component: FilmListComponent},\n\t{path: 'films/view/:id', component: SingleFilmComponent }\t\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FilmListComponent,\n    SingleFilmComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [FilmService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-default\">\n  <div class=\"container-fluid\">\n    <ul class=\"nav navbar-nav\">\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"films\">Film Selection</a>\n      </li>\n    </ul>\n\n  </div>\n</nav>\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n\n    <div class=\"list-group\">\n      <button\n        class=\"list-group-item\"\n        *ngFor=\"let film of films; let i = index\"\n        (click)=\"onViewFilm(i)\">\n        <h4 class=\"list-group-item-heading\" >\n          {{ film.title }}\n           <!-- <button class=\"btn btn-default pull-right\" (click)=\"onDeleteFilm(film)\">\n            <span class=\"glyphicon glyphicon-minus\"></span>\n          </button> -->\n        </h4>\n        <p class=\"list-group-item-text\">{{ film.producer }}</p>\n\t<img class=\"images\" style=\"max-width:120px;\" [src]=\"film.poster\"/>\n      </button>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Subscription } from 'rxjs'; // ERROR import \nimport {Router} from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Film }  from '../models/film.model';\nimport { FilmService } from '../services/film.service';\n\n@Component({\n  selector: 'app-film-list',\n  templateUrl: './film-list.component.html',\n  styleUrls: ['./film-list.component.css']\n})\nexport class FilmListComponent implements OnInit {\n\n  public films = [];\n  filmSubscription: Subscription;\n\n  constructor(private router: Router, private formBuilder: FormBuilder, private filmService: FilmService){}\n\n  ngOnInit(): void {\n    this.filmService.getFilms()\n    .subscribe(\n        data => this.films = data\n    );\n  }\n\n\n    onViewFilm(id: number) {\n         this.router.navigate(['/films', 'view', id]);\n  }\n\n\n   ngOnDestroy() {\n    //this.filmSubscription.unsubscribe();\n  }\n\n\n}//end comp\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs'; // ERROR import\nimport { Observable } from 'rxjs';\nimport {HttpClient, HttpClientModule } from '@angular/common/http';\n\nimport { Film }  from '../models/film.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmService {\n\n  public films = []; //Film[]\n  \n  constructor(private http: HttpClient){}\n\n  getFilms():Observable<Film[]>{\n        return this.http.get<Film[]>(\"assets/data.json\");\n  }\n  \n  getSingleFilm(id: number){\n\tthis.getFilms()\n    .subscribe(\n        data => this.films = data\n    );\n\treturn this.films[id];\n  }\n \n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}